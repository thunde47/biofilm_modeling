/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     mhdPimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         0.03;

deltaT          0.0001;

writeControl    adjustableRunTime;

writeInterval   0.01;

purgeWrite      0;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable yes;

adjustTimeStep  yes;

maxCo           1;
/*

functions
{
  probes
    {
        // Where to load it from
        functionObjectLibs ( "libsampling.so" );

        type        probes;

        // Name of the directory for probe data
        name        probes;
        probeLocations
        (
            
            (2 0 0)  
            (5 0 0) 
            (7.5 0 0)  
            (10 0 0)  
           
        );

        // Fields to be probed
       // fields ( p U T);
	 fields ( p U T );

        // Write at same frequency as fields
        outputControl       timeStep;
        outputInterval  1;
    }

    forceCoeffs1
{
    type        forceCoeffs;

    functionObjectLibs ( "libforces.so" );

    outputControl   timeStep;
    timeInterval    1;

    log         true;

    patches     ( CYLINDER_1 );

	pName p;
	Uname U;
    rhoName     rhoInf;      // Indicates incompressible
    rhoInf      1;           // Redundant for incompressible
    liftDir     (0 1 0);
    dragDir     (1 0 0);
    CofR        (0 0 0);  // Axle midpoint of cyl
    pitchAxis   (0 0 1);
    magUInf     1;
    lRef        1;        // Wheelbase length
    Aref        1;        // L *Z (1 *(0.2625*2) z = +-0.2625; d = 1)

    binData
    {
        nBin        20;          // output data into 20 bins
        direction   (1 0 0);     // bin direction
        cumulative  yes;
    }
*/
}
/*

forces
{
    type        forces;

    functionObjectLibs ( "libforces.so" );

    outputControl   timeStep;
    timeInterval    1;

    log         true;

    patches     ( CYLINDER_1 );
    pName       p;
    UName       U;
    rhoName     rhoInf;     // Indicates incompressible
    log         true;
    rhoInf      1;          // Redundant for incompressible

    CofR        (0 0 0);    // Rotation around centre line of propeller
    pitchAxis   (0 0 1);
}

} */
// ************************************************************************* //

/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.4.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
        (0 0 0) // 0
	(0.0003 0 0) // 1
	(0.0006 0 0) // 2
	(0.0009 0 0) // 3
	(0 0.0004 0) // 4
	(0.0003 0.0004 0) // 5
	(0.0006 0.0004 0) // 6
	(0.0009 0.0004 0) // 7
	(0 0 0.0001) // 8
	(0.0003 0 0.0001) // 9
	(0.0006 0 0.0001) // 10
	(0.0009 0 0.0001) // 11
	(0 0.0004 0.0001) // 12
	(0.0003 0.0004 0.0001) // 13
	(0.0006 0.0004 0.0001) // 14
	(0.0009 0.0004 0.0001) // 15
);

blocks
(
    hex (0 1 5 4 8 9 13 12) (50 80 1) simpleGrading (1 1 1)
    hex (1 2 6 5 9 10 14 13) (50 80 1) simpleGrading (1 1 1)
    hex (2 3 7 6 10 11 15 14) (50 80 1) simpleGrading (1 1 1)
);

edges
(
	 arc 0 1 (0.00015 0.00015 0)
         arc 1 2 (0.00045 0.00015 0) 
	 arc 2 3 (0.00075 0.00015 0)
         arc 8 9 (0.00015 0.00015 0.0001)   
         arc 9 10 (0.00045 0.00015 0.0001)
         arc 10 11 (0.00075 0.00015 0.0001)
       );

boundary
(
    movingWall
    {
        type patches;
        faces
        (
            (4 12 13 5)
            (5 13 14 6)
            (6 14 15 7)
        );
    }
    Inlet
    {
        type patch;
        faces
        (
            (0 8 12 4)
            //(2 6 5 1)
          //  (1 5 4 0)
        );
    }
    Outlet
    {
        type patch;
        faces
        (
           // (0 4 7 3)
            (3 7 15 11)
          //  (1 5 4 0)
        );
    }
    Bottom
    {
        type wall;
        faces
        (
            //(0 4 7 3)
           // (2 6 5 1)
            (0 1 9 8)
           (1 2 10 9)
           (2 3 11 10)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (8 9 13 12)
            (9 10 14 13)
            (10 11 15 14)
            (1 0 4 5)
            (2 1 5 6)
            (3 2 6 7)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
